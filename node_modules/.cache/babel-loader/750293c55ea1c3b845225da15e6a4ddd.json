{"ast":null,"code":"var _jsxFileName = \"D:\\\\Resume Projects\\\\Contact-log\\\\src\\\\App.js\";\nimport { Route, Switch } from 'react-router-dom'; //Route is a component, its job is to define different paths in the url we want to listen to and which components should be loaded for these different paths\n//While using just the Route component, react might display multiple pages (nested pages) at the same time as by default react router matches all the paths, urls as \"/new-meetups\" also has \"/\" and \"/favourites\" also has \"/\", to prevent this, we use \"Switch\"\n//\"Switch\" tells that only one of these Route components should be active\n//By default react router checks if the path of the current url starts with the path in the given \"path\", and because of Switch, it will stop looking as soon as it has a hit, as soon as it finds a match, so while looking for \"/new-meetups\" or \"/favourites\" it stops looking as soon as it finds \"/\", WE PREVENT THIS USING \"exact\" prop\n\nimport AllContactsPage from './pages/AllContacts';\nimport NewContactPage from './pages/NewContact';\nimport FavoritesPage from './pages/Favorites';\nimport Layout from './components/layout/Layout.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  //domain  //localhost:3000\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(AllMeetupsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new-meetup\",\n        children: /*#__PURE__*/_jsxDEV(NewMeetupPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favourites\",\n        children: /*#__PURE__*/_jsxDEV(FavoritesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Switch","AllContactsPage","NewContactPage","FavoritesPage","Layout","App"],"sources":["D:/Resume Projects/Contact-log/src/App.js"],"sourcesContent":["import { Route, Switch } from 'react-router-dom'; //Route is a component, its job is to define different paths in the url we want to listen to and which components should be loaded for these different paths\n//While using just the Route component, react might display multiple pages (nested pages) at the same time as by default react router matches all the paths, urls as \"/new-meetups\" also has \"/\" and \"/favourites\" also has \"/\", to prevent this, we use \"Switch\"\n\n//\"Switch\" tells that only one of these Route components should be active\n//By default react router checks if the path of the current url starts with the path in the given \"path\", and because of Switch, it will stop looking as soon as it has a hit, as soon as it finds a match, so while looking for \"/new-meetups\" or \"/favourites\" it stops looking as soon as it finds \"/\", WE PREVENT THIS USING \"exact\" prop\n\nimport AllContactsPage from './pages/AllContacts';\nimport NewContactPage from './pages/NewContact';\nimport FavoritesPage from './pages/Favorites';\nimport Layout from './components/layout/Layout.js';\n\nfunction App() {\n  //domain  //localhost:3000\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          {/* \"exact\" tells that for this route, it should not check if the path begins with this path but if it matches the whole path */}\n          <AllMeetupsPage />\n        </Route>\n        <Route path=\"/new-meetup\">\n          <NewMeetupPage />\n        </Route>\n        <Route path=\"/favourites\">\n          <FavoritesPage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CAAkD;AAClD;AAEA;AACA;;AAEA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,SAASC,GAAT,GAAe;EACb;EAEA,oBACE,QAAC,MAAD;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,KAAK,MAArB;QAAA,uBAEE,QAAC,cAAD;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAAA,uBACE,QAAC,aAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF,eAQE,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAAA,uBACE,QAAC,aAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;KAnBQA,G;AAqBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}